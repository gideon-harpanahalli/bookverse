name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: bookversebackend    # set this to the name of your Azure Web App
  DOTNET_VERSION: '6'                    # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build ./Bookverse/Bookverse/Bookverse.csproj --configuration Release  # Specifying project file

      - name: Publish with dotnet
        run: dotnet publish ./Bookverse/Bookverse/Bookverse.csproj -c Release -o ./Bookverse/bin/Release/net6.0/publish  # Specifying project file and output directory

      - name: List files after publish
        run: |
          echo "Current directory contents:"
          ls -la ./Bookverse/bin/Release/net6.0/
          echo "Contents of the output directory:"
          ls -la ./Bookverse/bin/Release/net6.0/publish

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ./Bookverse/bin/Release/net6.0/publish/*  # Ensure the path is correct and includes all files

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
          
      - name: List files after download
        run: |
          echo "Downloaded artifact contents:"
          ls -la
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.BOOKVERSE_BACKEND_APP }}
          package: net-app # Use the correct path to the publish output
